globals:
  - id: toggle_animation
    type: bool
    restore_value: no
    initial_value: 'true'
    # it seems that switch.on_turn_off happens on boot
    # so ignore the first toggle_animation
  - id: user_brightness
    type: float
    restore_value: yes
  - id: user_red
    type: float
    restore_value: yes
  - id: user_green
    type: float
    restore_value: yes
  - id: user_blue
    type: float
    restore_value: yes

  - id: ruuvi_z
    type: float
    restore_value: no

# Hook up the button
binary_sensor:
  - platform: gpio
    name: Switch
    pin: GPIO0
    on_press:
      then:
        - switch.toggle: relay

script:
  - id: flash_color
    mode: restart
    parameters:
      flash_r: float
      flash_g: float
      flash_b: float
    then:
      # don't save transition_color to the user_color
      - if:
          condition:
            lambda: |-
              return !(id(toggle_animation));
          then:
            - logger.log: "Saving user color"
            # save the previous color
            - globals.set:
                id: user_brightness
                value: !lambda 'return id(color).remote_values.is_on() ? id(color).remote_values.get_brightness() : 0;'
            - globals.set:
                id: user_red
                value: !lambda 'return id(color).remote_values.get_red();'
            - globals.set:
                id: user_green
                value: !lambda 'return id(color).remote_values.get_green();'
            - globals.set:
                id: user_blue
                value: !lambda 'return id(color).remote_values.get_blue();'
          else:
            - logger.log: "Not saving user color"
      - globals.set:
          id: toggle_animation
          value: 'true'
      # set color
      - light.turn_on:
          id: color
          #flash_length: 2000ms
          transition_length: 600ms
          brightness: 0.7
          red: !lambda return flash_r;
          green: !lambda return flash_g;
          blue: !lambda return flash_b;
      - delay: 2s
      # restore the previous color
      - light.turn_on:
          id: color
          #flash_length: 2000ms
          transition_length: 1500ms
          brightness: !lambda 'return id(user_brightness);'
          red: !lambda 'return id(user_red);'
          green: !lambda 'return id(user_green);'
          blue: !lambda 'return id(user_blue);'
      - globals.set:
          id: toggle_animation
          value: 'false'

switch:
  - platform: gpio
    id: relay
    name: ${device_name}
    pin: GPIO25
    on_turn_on:
      then:
      - script.execute:
          id: flash_color
          flash_r: 0
          flash_g: 1
          flash_b: 0.2
    on_turn_off:
      then:
      - script.execute:
          id: flash_color
          flash_r: 1
          flash_g: 0
          flash_b: 0.2

output:
  - platform: ledc
    id: led_red
    pin:
      number: GPIO26
      inverted: True
      mode: OUTPUT_OPEN_DRAIN
  - platform: ledc
    id: led_green
    pin:
      number: GPIO27
      inverted: True
      mode: OUTPUT_OPEN_DRAIN
  - platform: ledc
    id: led_blue
    pin:
      number: GPIO14
      inverted: True
      mode: OUTPUT_OPEN_DRAIN

light:
  - platform: rgb
    id: color
    name: ${device_name}
    red: led_red
    green: led_green
    blue: led_blue
